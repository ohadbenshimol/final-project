AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  photo-face-server

Globals:
  Function:
    Timeout: 120
    Runtime: nodejs14.x
    MemorySize: 1024
    CodeUri: ./build
#    AutoPublishAlias: live

Resources:
  EventsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: photo-face-events-bucket

  AddUserToEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/add-user-to-event.handler
      Description: add user subscription to event
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - AmazonAPIGatewayInvokeFullAccess
        - S3ReadPolicy:
            BucketName: !Ref EventsBucket
        - S3WritePolicy:
            BucketName: !Ref EventsBucket
        - Statement:
            - Effect: Allow
              Resource: '*'
              Action:
                - events:PutEvents
      Events:
        Api:
          Type: Api
          Properties:
#            RestApiId: !Ref MyServerlessApi
            Path: /add/user
            Method: POST

  AddImagesToEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/add-images.handler
      Description: add user images to event
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - AmazonAPIGatewayInvokeFullAccess
        - S3ReadPolicy:
            BucketName: !Ref EventsBucket
        - S3WritePolicy:
            BucketName: !Ref EventsBucket
        - Statement:
            - Effect: Allow
              Resource: '*'
              Action:
                - events:PutEvents
      Events:
        Api:
          Type: Api
          Properties:
#            RestApiId: !Ref MyServerlessApi
            Path: /add/images
            Method: POST

  CloseEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/close-event.handler
      Description: close event by user
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - AmazonAPIGatewayInvokeFullAccess
        - S3ReadPolicy:
            BucketName: !Ref EventsBucket
        - S3WritePolicy:
            BucketName: !Ref EventsBucket
        - Statement:
            - Effect: Allow
              Resource: '*'
              Action:
                - events:PutEvents
      Events:
        Api:
          Type: Api
          Properties:
#            RestApiId: !Ref MyServerlessApi
            Path: /close/event
            Method: POST

  MyServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: photo-face-api
      StageName: prod
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: openapi.yaml
      Auth:
        DefaultAuthorizer: MyApiAuthorizer
        Authorizers:
          MyApiAuthorizer:
            Type: AWS_IAM
        ApiKeyRequired: true

  MyApiAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: MyApiAuthorizer
      RestApiId: !Ref MyServerlessApi
      Type: TOKEN
      IdentitySource: method.request.header.Authorization
      AuthorizerResultTtlInSeconds: 300


